angular.module("templates", []).run(["$templateCache", function($templateCache) {$templateCache.put("auth-header.html","<div class=\"topbar-fixed-wrapper\">\n    <top-bar>\n        <ul class=\"title-area\">\n            <li class=\"name\">\n                <h1><a ui-sref=\".welcome\">My Site</a></h1>\n            </li>\n            <li toggle-top-bar class=\"menu-icon\"><a href=\"#\"><span></span></a></li>\n        </ul>\n\n        <top-bar-section>\n            <ul class=\"right\">\n                <li><a ui-sref=\".profile\">Profile</a></li>\n                <li><a ng-click=\"logout()\">Logout</a></li>\n            </ul>\n        </top-bar-section>\n    </top-bar>\n</div>");
$templateCache.put("content.html","\n    <div ui-view=\"content\"></div>\n");
$templateCache.put("footer.html","\n    <section class=\"full-width copyright-section\">\n        <div class=\"row fullWidth\">\n            <div class=\"text-center\">\n                <p>Copyright &copy; Tomas Holub 2015</p>\n            </div>\n        </div>\n    </section>\n");
$templateCache.put("header.html","<div class=\"topbar-fixed-wrapper\">\n    <top-bar>\n        <ul class=\"title-area\">\n            <li class=\"name\">\n                <h1><a ui-sref=\".welcome\">My Site</a></h1>\n            </li>\n            <li toggle-top-bar class=\"menu-icon\"><a href=\"#\"><span></span></a></li>\n        </ul>\n\n        <top-bar-section>\n            <ul class=\"right\">\n                <li><a ui-sref=\".sign_up\">Register</a></li>\n                <li><a ui-sref=\".sign_in\">Login</a></li>\n            </ul>\n        </top-bar-section>\n    </top-bar>\n</div>");
$templateCache.put("partial-login.html","<div class=\"small-11 medium-8 large-6 small-centered columns\">\n    <form id=\"loginForm\" name=\"loginForm\" class=\"pure-form pure-form-stacked\" novalidate ng-submit=\"login.submit(loginForm.$valid)\">\n        <fieldset>\n            <legend>Sign in to your account</legend>\n            <small class=\"error\" ng-show=\"login.invalid\">{{login.message}}</small>\n            <label>\n                Type your email.\n                <input required type=\"email\" name=\"email\" placeholder=\"Email\" ng-model=\"login.email\">\n            </label>\n            <div ng-messages=\"loginForm.email.$error\">\n                <small class=\"error\" ng-message=\"email\" >Please enter a valid email address</small>\n            </div>\n            <label>\n                Type your password.\n                <input minlength=\"5\" name=\"password\" type=\"password\" placeholder=\"Password\" ng-model=\"login.password\">\n            </label>\n            <div ng-messages=\"loginForm.password.$error\">\n                <small class=\"error\" ng-message=\"minlength\" >The password is definitely longer</small>\n            </div>\n            <button id=\"register\" type=\"submit\" class=\"pure-button pure-button-primary right\">\n                Sign in\n            </button>\n\n        </fieldset>\n    </form>\n</div>\n\n");
$templateCache.put("partial-profile.html","<div class=\"parallax-background\">\n\n\n    <div class=\"cover\">\n        <div class=\"image image-zoom\">\n            <div class=\"background-gradient\"></div>\n        </div>\n    </div>\n\n    Boilerplate\n\n</div>\n\n<div class=\"parallax-content\">\n    {{profile.test}}\n    <h2>Hi {{profile.user.email}}</h2>\n    <h3>Welcome on your profile</h3>\n</div>");
$templateCache.put("partial-register.html","<div class=\"small-11 medium-8 large-6 small-centered columns\">\n    <h1>Join Boilerplate</h1>\n    <p>The best place to do anything you want</p>\n    <form id=\"registrationForm\" name=\"registrationForm\" class=\"pure-form pure-form-stacked\" novalidate ng-submit=\"register.submit(registrationForm.$valid)\">\n        <fieldset>\n            <legend>Create your personal account</legend>\n            <small class=\"error\" ng-show=\"register.invalid\">{{register.message}}</small>\n            <label>\n                This will be your also your  username â€” please enter valid email only.\n                <input required type=\"email\" name=\"email\" placeholder=\"Email\" ng-model=\"register.email\">\n            </label>\n            <div ng-messages=\"registrationForm.email.$error\">\n                <small class=\"error\" ng-message=\"email\" >Please enter a valid email address</small>\n            </div>\n            <label>\n                Use at least one lowercase letter, one numeral, and seven characters.\n                <input required minlength=\"5\" type=\"password\" name=\"password\" placeholder=\"Password\" ng-model=\"register.password\">\n            </label>\n            <div ng-messages=\"registrationForm.password.$error\">\n                <small class=\"error\" ng-message=\"minlength\" >The password is too short</small>\n            </div>\n            <label>\n                <input required type=\"password\" name=\"password_repeat\" placeholder=\"Password repeat\" ng-model=\"register.password_repeat\" password-confirmation=\"register.password\">\n                <div ng-messages=\"registrationForm.password_repeat.$error\">\n                    <small class=\"error\" ng-message=\"compare\" >Password doesn\'t match the previous entry</small>\n                </div>\n            </label>\n            <div class=\"small-12 columns\">\n                <h5><small>By clicking on \"Create an account\", you are agreeing to the Terms of Service and the Privacy Policy.</small></h5>\n            </div>\n            <hr/>\n            <button id=\"register\" type=\"submit\" class=\"pure-button pure-button-primary right\">\n                Create an account\n            </button>\n\n        </fieldset>\n    </form>\n</div>\n\n");
$templateCache.put("partial-welcome.html","<div class=\"parallax-background\">\n\n    <div class=\"cover\">\n\n        <div class=\"image image-zoom\">\n            <div class=\"background-gradient\">\n            </div>\n        </div>\n        <div class=\"title\">\n            <div class=\"small-11 medium-8 large-6 small-centered columns\">\n                <h1 class=\"text-center\">Welcome!</h1>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"parallax-content\">\n\n    <div class=\"row fullWidth\">\n        <div class=\"large-12 columns\">\n            <h3>Welcome to my little-big app boileplate!</h3><hr>\n            <div>\n                Main purpose of this repo is to get a well written basic application, with all settings set and working, so it is easy just code the business logic.\n                Check out the main features:\n            </div><hr>\n        </div>\n        <div class=\"large-3 medium-6 small-12 columns\">\n            <div class=\"panel\">\n                <h4>Client</h4>\n                <ul class=\"disc\">\n                    <li>SPA based on Angular.js</li>\n                    <li>Each component is separated to single file, and loaded with require.js</li>\n                    <li>Each module and every method is properly documented, using ng-docs</li>\n                    <li>Transition between views/states is handled by ui-router</li>\n                    <li>Forms are validated using ng-messages module and custom directives</li>\n                    <li>App uses Foundation CSS framework, with angular-foundation module</li>\n                    <li>Unit tests are written using Jasmine testing framework</li>\n                    <li>Karma test runner is used for test execution</li>\n                    <li>End to end tests are written using Protractor</li>\n                </ul>\n            </div>\n        </div>\n        <div class=\"large-3 medium-6 small-12 columns\">\n            <div class=\"panel\">\n                <h4>Server</h4>\n                <ul class=\"disc\">\n                    <li>Server is based on node.js using express framework</li>\n                    <li>Data are stored to mongodb using mongoose npm module</li>\n                    <li>serves client index page and REST api</li>\n                    <li>code is structured to separated files</li>\n                    <li>code is tested using mocha framework</li>\n                </ul>\n            </div>\n        </div>\n        <div class=\"large-3 medium-6 small-12 columns\">\n            <div class=\"panel\">\n                <h4>Build tools</h4>\n                <ul class=\"disc\">\n                    <li>Build is handled using GULP task manager</li>\n                    <li>Currently there are 3 main tasks defined:</li>\n                        <ol>\n                            <li>build for development </li>\n                            <li>build for production</li>\n                            <li>server test runner</li>\n                        </ol>\n                    <li>Main build features:</li>\n                    <ol>\n                        <li>Less compilation</li>\n                        <li>Test execution</li>\n                        <li>Compilation of html templates to js module</li>\n                        <li>Compilation of index.html template based on environment</li>\n                        <li>Concatenation and minification of all JS files resulting in single file</li>\n                        <li>Concatenation and minification of all CSS files resulting in single file</li>\n                    </ol>\n                </ul>\n            </div>\n        </div>\n        <div class=\"large-3 medium-6 small-12 columns\">\n            <div class=\"panel\">\n                <h4>Deploy</h4>\n                <ul class=\"disc\">\n                    <li>Application is prepared to work with OPENSHIFT</li>\n                    <li>Create new application on the OPENSHIFT server</li>\n                    <li>Push this boilerplate to the OPENSHIFT server</li>\n                    <li>Following steps executes:</li>\n                    <ol>\n                        <li>MongoDb cartridge is started</li>\n                        <li>All dependencies from package.json gets installed</li>\n                        <li>npm start gets executed</li>\n                        <li>bower install gets started based on package.json configuration</li>\n                        <li>server gets started</li>\n                        <li>enjoy :)</li>\n                    </ol>\n                </ul>\n            </div>\n        </div>\n    </div>\n</div>");}]);